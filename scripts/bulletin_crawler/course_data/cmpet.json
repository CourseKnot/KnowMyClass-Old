[{"course_name": "CMPET 5: Engineering Methods in Engineering Technology", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "1 Credits", "description": "Introduction to experimental and computer methods in engineering technology; applications of experimental concepts through student involvement in computer exercises.  CMPET 005 Engineering Methods in Engineering Technology (1) Engineering Methods in Engineering Technology is a follow-on computer skills course to EET 002S. Its purpose is to teach EET students how to use computers to help solve technical problems. The course begins by focusing on the use of the mathematical and graphing capabilities of spreadsheet programs to help analyze and present technical data. This is followed by investigation of more sophisticated problem-solving and analytical software such as Mathcad, Matlab, Mathmatica, etc. (depending upon availability). Finally, the basic electronic simulations introduced in EET 002S are extended to include more sophisticated circuit analyses using PSpice, Electronic Workbench, etc. In all cases, the problem studied in CMPET 005 are typical of the applications that will be seen in future technology classes and in the engineering technology field. In some cases, again depending on availability of the software, students are exposed to the capabilities of modern 4th generation programming languages such as Visual Basic, LabView, HPVee, etc.", "prerequisite": "EET 101"}, {"course_name": "CMPET 117: Digital Electronics", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Fundamentals of digital circuits, including logic circuits, boolean algebra, Karnaugh maps, counters, and registers.  CMPET 117 Digital Electronics (3) Digital Electronics covers fundamentals of both combinatorial and sequential digital logic circuits. Basic topics include Boolean algebra, binary codes, Boolean logic simplification and minimization theorems, and Karnaugh maps. Combinatorial and sequential logic topics include the theory and operation of arithmetic circuits, registers, counters, multiplexers, encoders/decoders, all major types of flip-flops, A-D and D-A conversions, counters, and memory systems. The course focuses primarily on small and medium scale devices using TTL logic with some use of MOS devices. Significant emphasis is placed on the use of manufacturers' data books to define device operating characteristics. CMPET 117 is generally taken concurrently with CMPET 120, which is a digital electronics laboratory course. The lab exercise in CMPET 120 are coordinated with the CMPET 117 lecture material."}, {"course_name": "CMPET 120: Digital Electronics Laboratory", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "1 Credits", "description": "Laboratory study of digital electronics circuits.  CMPET 120 Digital Electronics Laboratory (1) Digital Electronics Laboratory is a one credit laboratory that meets for a single 2-hour session each week. It is normally taken concurrently with CMPET 117. The lab exercises in CMPET 120 expose students to the digital devices that are described in the CMPET 117 lecture course and give them an opportunity to observe and understand their operation in practical terms. The exercises cover basic logic gate functions using AND, OR, NOT, NAND, and NOR devices. Students also investigate the operation of flip-flops, adder circuits, binary counters, shift registers, encoders and decoders, and memory units. Often, students are required to complete a digital design project as part of the CMPET 120 course. Many faculty also require selected labs to be submitted as formal reports. Digital simulation software is also commonly used in this course."}, {"course_name": "CMPET 211: Embedded Processors and DSP", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Introduction to micro-controllers and embedded controllers with applications, including concepts of digital signal processing.  CMPET 211 Embedded Processors and DSP (3)CMPET 211 provides students with a basic understanding of microprocessors and microcontrollers with an emphasis on integrated embedded control of real world applications. The course provides a background in micro-processor/controller architecture, presents the operation and application of microcontroller peripherals, and introduces assembly language and higher level structured programming language. This can be a structured language such as C++ or PIC Basic. The intent is to introduce the students to a more powerful programming language capable of developing algorithms for embedded control of real world processes. Students will learn the analog to digital (ADC) and digital to analog (DAC) process and understand the resolution and aliasing consequences of these conversions. With the ADC and DAC material mastered, the course will then introduce students to basic applications of Digital Signal Processing (DSP), such as digital filtering and noise reduction. Simple discrete Fourier transforms can be covered along with sampling theory and digital aliasing. Although some of the mathematical theory underlying DSP techniques, such as Fourier and Hilbert Transforms, digital filter design and signal compression, can be fairly complex, the numerical operations required to actually implement these techniques are relatively simple and will be shown. DSP chips and applications will be covered to illustrate how to carry out such operations incredibly fast and efficiently. Topics covered include:- Microprocessor, microcontroller, and embedded system architecture- Microcontroller peripherals- Assembly Language Syntax and Programming- Structured Programming and Algorithms- Input and Output interfacing- ADC and DAC conversions- Sampling and DSP The course will emphasize the concepts, principles, procedures, and programming models used by engineers and technologists to design, develop and implement digital control for real world instrumentation. Particular emphasis will be given to embedded controllers for process control. Lectures will be supported by laboratory exercises in which the student will develop, assemble, download, and run programs on the target processor. Programming activities will focus on the development of algorithms for control of real world processes. Students will be required to prepare written laboratory reports outlining the program documentation. Reports will be graded based both on their technical quality and their grammatical and professionalism. Students in CMPET 211 will be required to use computers in both class and laboratory exercises to develop and test their programs.", "prerequisite": "CMPET 117"}, {"course_name": "CMPET 301: Algorithmic Processes for Electrical Systems", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Algorithms, languages, notations and applications of object- and procedure- oriented languages to electrical and electronic problem solving.  CMPET 301 Algorithmic Processes for Electrical Systems (3) Algorithmic Processes for Electrical Systems is a required course for junior-level students in the Electrical and Computer Engineering Technology (ECET) baccalaureate degree program. It is essential for Electrical Engineering Technology students to acquire a working knowledge of a computer language commonly used in practice. This course will prepare the student to analyze a problem and implement a structured procedural design and also an object-oriented design. This course is a follow-up course to CMPET 5 and CMPET 211, and prepares the student for several more advanced courses in the program related to computer analysis of circuits and systems.This course covers properties of algorithms and languages, software development process, notations for describing algorithms, applications of object- and procedure-oriented languages to electrical and electronic problem solving, high-level language programming, integrated development environment, and structured programming. Laboratory exercises parallel lecture material.", "prerequisite": "CMPET 211"}, {"course_name": "CMPET 333: Computer Networking", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Introduction to Local Area Networks (LANs) and Wide Area Networks (WANs), including transmission mediums, protocols, topologies, software, and hardware. CMPET 333 Computer Networking (3) The purpose of the course is to understand the principles of networking as applied to local area networks (LANs) and wide area networks (WANs).  The students learn internet working models such as the OSI seven-layer, Ethernet, and Cisco three-layer models.  Network topologies and various connectivity devices are investigated to form networks.  Cisco IOS is introduced and console port and web interfaces are used for configuring Cisco devices. Subnetting is discussed and Cisco switches and routers are used for the implementation of LANs and WANs.  Various protocols such as ARP, ICMP, IP, and TCP are presented and a software protocol analyzer is utilized. Applications such as file-sharing and remote data collection are investigated.  Laboratory exercises reinforce concepts developed in lecture.", "prerequisite": "EET 212W"}, {"course_name": "CMPET 355: Intermediate Microprocessors and Microcomputers", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Microprocessor architecture and assembly language programming.  Hardware and software of basic microprocessors.  Input/output structure in microcomputers.  CMPET 355 CMPET 355 Intermediate Microprocessors and Microcomputers (3) Intermediate Microprocessors and Microcomputers is a required course for junior-level students in the Electrical and Computer Engineering Technology (ECET) baccalaureate degree program. This course builds upon prerequisite digital logic, microprocessors and electronics courses. It includes microprocessor architecture and assembly language programming, hardware and software of basic microprocessors, and input/output structure in microcomputers.The course covers a review of number systems, digital logic, computer architecture, software development process; the microcontroller, specifications, block diagrams; assembly language programming; jump, loop and call instructions; I/O port programming, addressing modes, arithmetic instructions and programs, logic instructions and programs, single-bit instructions and programs, counter/timer programming, serial communication, interrupts programming, real world interfacing, and bus interfacing to external memory. Laboratory exercises parallel lecture material.", "prerequisite": "EET 212W"}, {"course_name": "CMPET 401: Data Communication and Networking", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Signal representations, communication techniques, interfacing, serial and parallel communication, modems, error detection, LAN and WAN protocols.  CMPET 401CMPET 401 Data Communication and Networking (3) This course is designed to provide the students with a foundation in signal presentation, communication techniques, serial and parallel communication, modems, and other interfacing methods. The networking technologies for local and wide area networks are also studied in detail. The range of topics covered depends on students' background. Topics: Part 1. (2 weeks) Overview: Introduction Protocols and Architecture; Part 2. (9 weeks) Data Communications: Data Transmission Media Data encoding Communication techniques Data Link Control Multiplexing; Part 3. (4 weeks) Local and Wide Area Networks: LAN and WAN protocols Switching techniques Bridges and routers High speed networks Internetworking Internet resources. This course is a required course in the Computer Engineering Technology Option of the Electrical Engineering Technology BS curriculum.", "prerequisite": "CMPEN 271"}, {"course_name": "CMPET 402: Data Communication and Networking Laboratory", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "1 Credits", "description": "Network operating systems, LAN and WAN protocols, serial and parallel communications, modems, FAX, and other interfacing methods."}, {"course_name": "CMPET 403: Switching Circuit Design", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "4 Credits", "description": "Analysis and design of advanced combinational and sequential circuits using IC logic devices and PLD's while promoting the use of software development tools.  CMPET 403 Switching Circuit Design (4) This course is designed to enhance students' abilities to analyze and design complex digital systems. The course will include the following topics: 1. Review of combinational circuits' analysis and design using, karnaugh maps with up to six variables and Quine-McCluskey method 2. Advanced combinational logic analysis and design with MSI logic circuits 3. Hazard in digital systems 4. Review of analysis and design of synchronous finite state machines (Moore and Mealy methodologies) 5. Synchronous sequential logic design using One-hot finite state machines 6. State reduction for completely and incompletely specified circuits/systems 7. Analysis and design of asynchronous sequential circuits/systems 8. Logic circuit testing and testable design 9. Introduction to Hardware Description LanguageThis course is a technical elective in the Electrical Engineering Technology BS curriculum and is intended to be taken by students who have completed their first digital systems course requirements. As such, the course integrates materials from the above undergraduate electrical course in addition to related math, engineering, and science courses. No special facilities are required for this course other than laboratories available to the Electrical Engineering Technology Program.", "prerequisite": "CMPEN 271"}, {"course_name": "CMPET 412: Microcomputers", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "4 Credits", "description": "Design, architecture, programming, and interfacing of microprocessors, enhanced by lab experiments.  CMPET 412 Microcomputers (4) E E T 412 is an intermediate course in microprocessor architecture, programming, and interfacing. It details the inner workings of a contemporary microprocessor, including its registers, busses, external connections, instruction set, and its available support devices for memory management, data transfer, clocking and interfacing. It includes a laboratory in which students program in machine language, assembly language, and high level language. Labs also teach students to interface a microprocessor to the user keyboard, the user display, floppy and hard disk drives, and external serial and parallel devices. E E T 412 is intended as an intermediate course, offered to students who have already had some exposure to microprocessor systems, microcomputer architecture, and low-level computer programming.", "prerequisite": "CMPEN 271"}, {"course_name": "CMPET 456: Advanced Microprocessors, High Level Interfacing", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Operating systems; systems programming; high-level application programming; high-level hardware and software protocols; serial and parallel digital communications.  CMPET 456 CMPET 456 Advanced Microprocessors, High Level Interfacing (3) Advanced Microprocessors, High Level Interfacing is a required course for senior-level students pursuing the computer engineering technology (CET) option in the Electrical and Computer Engineering Technology (ECET) baccalaureate degree program. Topics of this course include operating systems, systems programming, high-level application programming, high-level hardware and software protocols, serial and parallel digit communications.The purpose of this course is to extend and augment the topics covered in the earlier computer oriented courses, and build upon the foundations established there. It covers large scale embedded systems along with the related hardware and software design considerations. It is organized around a few intensive projects that cover the breadth of the material. The need for operating systems is discussed, as well as their important features including system services, command processing, device drivers, interrupt handling, memory and device management, system libraries, dynamic linking, virtual memory, multitasking, and inter-task communication. Unique considerations of real time operating systems are reviewed, such as throughput, task blocking, semaphores and special services. The gray area between operating systems and application programming known as systems programming is addressed, including standardization, generalization, choice of language, and make-buy decision issues.A large part of the course is spent on high-level application programming. Topics include structured programming, user-written functions, data structuring and packetizing, and use of commercial libraries and other intellectual property.Protocols based on current technology such as EPP, RS232, RS485, IIC, DeviceNet, USB, IEEE488, IEEE1394, are covered. Binary and character-based data transfer is discussed, along with communication layers and error detection, correction, and recovery issues. Serial and parallel communication topics include analysis and evaluation of the pros and cons of each protocol, debugging, monitoring, timing, and throughput.", "prerequisite": "CMPET 355"}, {"course_name": "CMPET 457: Software Engineering", "department": "Computer Engineering Technology - CA (CMPET)", "credits": "3 Credits", "description": "Application of modern techniques in software development, including program design based on new methods and tools.  CMPET 457 CMPET 457 Software Engineering (3) Software engineering is a required course for senior-level students pursuing the computer engineering technology (CET) option in the Electrical and Computer Engineering Technology (ECET) baccalaureate degree program. Topics of the course include application of modern techniques in software development including program design based on current methods and tools. The purpose of this course is to stress a rigorous and systematic approach to embedded software development that represents current best practices and is widely accepted by business, industry and regulatory agencies governing embedded software. This includes proper planning and implementation.Knowledge of generally accepted core standards and guidelines is stressed, including safety planning, hazards analysis, software management planning, requirements specification, design documents, coding, test plans, test specifications, test logs, test reports, design reviews, structured code walk-throughs, verification and validation, and reporting. The Unified Modeling Language (UML) is introduced and followed, including the components of UML, class diagrams, object diagrams, use-case diagrams, state diagrams, sequence diagrams, activity diagrams, collaboration diagrams, component diagrams, and deployment diagrams. Object oriented concepts include classes, abstraction, inheritance, polymorphism, encapsulation, message sending, associations, and aggregation.", "prerequisite": "CMPET 355"}]